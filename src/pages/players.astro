---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import { SITE_TITLE } from '../consts';
import { getSupabaseServer } from '../lib/db/supabase-server';
import { getCurrentLanguage } from '../i18n/utils';
import { getTranslations } from '../i18n/translations';
import '../styles/players.css';

const currentLang = getCurrentLanguage();
const t = getTranslations(currentLang);

// Funci√≥n para convertir metros a pies y pulgadas
function metersToFeetInches(meters: number): string {
	const totalInches = meters * 39.3701; // Convertir metros a pulgadas
	const feet = Math.floor(totalInches / 12);
	const inches = Math.round(totalInches % 12);
	return `${feet}'${inches}"`;
}

type Player = {
	id: number;
	dorsal: number;
	nombre: string;
	apellido: string;
	estatura: number;
	cumple: string;
	posicion: string;
	photo_url?: string;
};

let players: Player[] = [];
let error: string | null = null;

try {
	const supabase = getSupabaseServer();
	const { data, error: supabaseError } = await supabase
		.from('players')
		.select('*')
		.order('dorsal');
	
	if (supabaseError) {
		console.error('Supabase error:', supabaseError);
		throw new Error(supabaseError.message);
	}
	
	players = data || [];
} catch (e) {
	console.error('Error fetching players:', e);
	if (e instanceof Error) {
		error = e.message;
	} else {
		error = 'Error al cargar jugadores desde la base de datos';
	}
}
---

<!doctype html>
<html lang={currentLang}>
<head>
<BaseHead title={`${currentLang === 'en' ? 'Players' : 'Jugadores'} - ${SITE_TITLE}`} description={t.players.pageDescription} />
</head>
<body>
		<Header />
		<main>
			<section class="players-hero">
				<h1>üèÄ <span class="gradient-text" data-i18n="players.pageTitle">{t.players.pageTitle}</span></h1>
				<p data-i18n="players.pageDescription">{t.players.pageDescription}</p>
			</section>

			<section class="players-container">
				{error ? (
					<div class="error-message">
						<p><span data-i18n="players.errorLoading">{t.players.errorLoading}</span> {error}</p>
					</div>
				) : players.length === 0 ? (
					<div class="no-players">
						<p data-i18n="players.noPlayers">{t.players.noPlayers}</p>
					</div>
				) : (
					<div class="players-grid">
						{players.map((player) => (
							<div class="player-card">
								<div class="player-info">
									<div class="player-number">#{player.dorsal}</div>
									<h2 class="player-name">
										<span class="first-name">{player.nombre}</span>
										<span class="surname">{player.apellido}</span>
									</h2>
									<div class="player-details">
										<div class="detail-item">
											<span class="detail-icon">üèÄ</span>
											<span class="detail-label" data-i18n="players.position">{t.players.position}</span>
											<span class="detail-value" data-position={player.posicion}>
												{t.players.positions[player.posicion as keyof typeof t.players.positions] || player.posicion.charAt(0).toUpperCase() + player.posicion.slice(1)}
											</span>
										</div>
										<div class="detail-item">
											<span class="detail-icon">üìè</span>
											<span class="detail-label" data-i18n="players.height">{t.players.height}</span>
											<span class="detail-value" data-height={player.estatura}>
												{currentLang === 'en' ? metersToFeetInches(player.estatura) : `${player.estatura} m`}
											</span>
										</div>
										<div class="detail-item">
											<span class="detail-icon">üéÇ</span>
											<span class="detail-label" data-i18n="players.birthday">{t.players.birthday}</span>
											<span class="detail-value" data-date={player.cumple}>
												{new Date(player.cumple).toLocaleDateString(currentLang === 'en' ? 'en-US' : 'es-ES', { 
													day: 'numeric', 
													month: currentLang === 'en' ? 'short' : 'long' 
												})}
											</span>
										</div>
									</div>
								</div>
								{player.photo_url && (
									<div class="player-photo-container">
										<img src={player.photo_url} alt={`${player.nombre} ${player.apellido}`} class="player-photo" />
									</div>
								)}
							</div>
						))}
					</div>
				)}
			</section>
		</main>
		<Footer />
		
		<script>
			import { initPlayersLanguageSync } from '../scripts/playersLanguageSync';
			initPlayersLanguageSync();
		</script>
	</body>
</html>