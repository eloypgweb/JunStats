---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';

type Player = {
  id: number;
  numero: number;
  nombre: string;
  apellido: string;
  altura: string;
  desayuno_favorito: string;
  created_at: string;
};

// Fetch players from API
let players: Player[] = [];
let error: string | null = null;

try {
  const response = await fetch(`${Astro.url.origin}/api/players`);
  if (response.ok) {
    const data = await response.json();
    players = data.players || [];
  } else {
    error = 'Error al cargar los jugadores';
  }
} catch (e) {
  error = 'Error de conexi√≥n con la base de datos';
  console.error(e);
}
---

<!doctype html>
<html lang="es">
	<head>
		<BaseHead title="Jugadores - JunStats" description="Lista de jugadores del equipo" />
	</head>
	<body>
		<Header />
		<main>
			<section class="players-section">
				<div class="container">
					<h1>üèÄ Plantilla del Equipo</h1>
					<p class="subtitle">Conoce a nuestros jugadores</p>

					{error ? (
						<div class="error-message">
							<p>‚ö†Ô∏è {error}</p>
						</div>
					) : players.length === 0 ? (
						<div class="empty-message">
							<p>No hay jugadores registrados todav√≠a.</p>
						</div>
					) : (
						<div class="players-grid">
							{players.map((player) => (
								<article class="player-card">
									<div class="player-number">#{player.numero}</div>
									<div class="player-info">
										<h2 class="player-name">
											{player.nombre} {player.apellido}
										</h2>
										<div class="player-details">
											<div class="detail-item">
												<span class="detail-icon">üìè</span>
												<span class="detail-label">Altura:</span>
												<span class="detail-value">{player.altura}</span>
											</div>
											<div class="detail-item">
												<span class="detail-icon">üç≥</span>
												<span class="detail-label">Desayuno favorito:</span>
												<span class="detail-value">{player.desayuno_favorito}</span>
											</div>
										</div>
									</div>
								</article>
							))}
						</div>
					)}
				</div>
			</section>
		</main>
		<Footer />

		<style>
			.players-section {
				padding: 4rem 2rem;
				min-height: calc(100vh - 200px);
			}

			.container {
				max-width: 1200px;
				margin: 0 auto;
			}

			h1 {
				font-size: 3rem;
				color: rgb(var(--text-primary));
				margin-bottom: 0.5rem;
				text-align: center;
				background: linear-gradient(135deg, var(--accent), #00d4ff);
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
				background-clip: text;
			}

			.subtitle {
				text-align: center;
				color: rgb(var(--text-secondary));
				font-size: 1.2rem;
				margin-bottom: 3rem;
			}

			.error-message,
			.empty-message {
				text-align: center;
				padding: 2rem;
				background: rgba(var(--border-medium), 0.1);
				border-radius: var(--radius-lg);
				color: rgb(var(--text-secondary));
				font-size: 1.1rem;
			}

			.error-message {
				border: 2px solid rgba(255, 0, 0, 0.3);
			}

			.players-grid {
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
				gap: 2rem;
				margin-top: 2rem;
			}

			.player-card {
				background: var(--bg-secondary);
				border-radius: var(--radius-lg);
				padding: 2rem;
				box-shadow: var(--shadow-md);
				transition: all var(--transition-normal);
				border: 1px solid rgba(var(--border-medium), 0.3);
				position: relative;
				overflow: hidden;
			}

			.player-card::before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 4px;
				background: linear-gradient(90deg, var(--accent), #00d4ff);
				transform: scaleX(0);
				transition: transform var(--transition-normal);
			}

			.player-card:hover {
				transform: translateY(-8px);
				box-shadow: var(--shadow-xl);
				border-color: var(--accent);
			}

			.player-card:hover::before {
				transform: scaleX(1);
			}

			.player-number {
				position: absolute;
				top: 1rem;
				right: 1rem;
				font-size: 3rem;
				font-weight: 900;
				color: rgba(var(--text-primary), 0.1);
				line-height: 1;
			}

			.player-info {
				position: relative;
				z-index: 1;
			}

			.player-name {
				font-size: 1.5rem;
				color: rgb(var(--text-primary));
				margin-bottom: 1.5rem;
				font-weight: 700;
			}

			.player-details {
				display: flex;
				flex-direction: column;
				gap: 1rem;
			}

			.detail-item {
				display: flex;
				align-items: center;
				gap: 0.75rem;
				padding: 0.75rem;
				background: rgba(var(--border-medium), 0.1);
				border-radius: var(--radius-md);
				transition: background var(--transition-fast);
			}

			.detail-item:hover {
				background: rgba(var(--accent-rgb), 0.1);
			}

			.detail-icon {
				font-size: 1.5rem;
				flex-shrink: 0;
			}

			.detail-label {
				color: rgb(var(--text-secondary));
				font-size: 0.9rem;
				font-weight: 600;
				flex-shrink: 0;
			}

			.detail-value {
				color: rgb(var(--text-primary));
				font-weight: 500;
				margin-left: auto;
			}

			@media (max-width: 768px) {
				.players-section {
					padding: 2rem 1rem;
				}

				h1 {
					font-size: 2rem;
				}

				.subtitle {
					font-size: 1rem;
				}

				.players-grid {
					grid-template-columns: 1fr;
					gap: 1.5rem;
				}

				.player-card {
					padding: 1.5rem;
				}

				.player-number {
					font-size: 2.5rem;
				}

				.player-name {
					font-size: 1.3rem;
				}
			}

			@media (prefers-reduced-motion: reduce) {
				.player-card,
				.detail-item,
				.player-card::before {
					transition: none;
				}

				.player-card:hover {
					transform: none;
				}
			}
		</style>
	</body>
</html>
